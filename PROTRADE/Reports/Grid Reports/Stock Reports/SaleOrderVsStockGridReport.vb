
Imports BL
Imports DevExpress.XtraGrid.Views.Grid

Public Class SaleOrderVsStockGridReport

    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT
    Public WHERECLAUSE As String = ""
    Public OTHERWHERECLAUSE As String = ""
    Public SOCLAUSE As String = ""
    Public BARCODECLAUSE As String = ""
    Public FRMSTRING As String = ""

    Private Sub cmdexit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Private Sub ExcelExport_Click(sender As Object, e As EventArgs) Handles ExcelExport.Click
        Try
            Try

                Dim PATH As String = Application.StartupPath & "\Order Details.XLS"
                Dim opti As New DevExpress.XtraPrinting.XlsExportOptions
                opti.ShowGridLines = True
                opti.SheetName = "Order Details"
                GRIDBILL.ExportToXls(PATH, opti)
                EXCELCMPHEADER(PATH, "Order Details", GRIDBILL.VisibleColumns.Count + GRIDBILL.GroupCount)
            Catch ex As Exception
                Throw ex
            End Try
        Catch ex As Exception
            MsgBox("Order Details Excel File is Open, Please Close the File first then try to Export", MsgBoxStyle.Critical)
        End Try
    End Sub

    Private Sub SaleOrderVsStockGridReport_KeyDown(sender As Object, e As KeyEventArgs) Handles Me.KeyDown
        Try
            If e.KeyCode = Windows.Forms.Keys.Escape Then
                Me.Close()
            End If
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub

    Private Sub SaleOrderVsStockGridReport_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            Dim DTROW() As DataRow
            DTROW = USERRIGHTS.Select("FormName = 'SALE ORDER'")
            USERADD = DTROW(0).Item(1)
            USEREDIT = DTROW(0).Item(2)
            USERVIEW = DTROW(0).Item(3)
            USERDELETE = DTROW(0).Item(4)

            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If

            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As New DataTable

            Dim DTUNIT As DataTable = OBJCMN.search("UNIT_ABBR", "", "DEFAULTSTOCKUNIT", "")
            If DTUNIT.Rows.Count > 0 Then BARCODECLAUSE = BARCODECLAUSE & " AND UNIT IN (SELECT UNIT_ABBR FROM DEFAULTSTOCKUNIT)"

            If SALEORDERONMTRS = True Then SOCLAUSE = SOCLAUSE & " AND ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0) > 0 " Else SOCLAUSE = SOCLAUSE & " AND ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0) > 0 "

            'THIS IS DONE FOR STOCK VS ORDER REPORT
            If FRMSTRING = "ORDERVSSTOCK" Then
                DT = OBJCMN.search(" J.ITEMNAME, ISNULL(J.CATEGORY,'') AS CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(PROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(PROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS ", "", " (SELECT T.item_name AS ITEMNAME, T.DESIGN_NO AS DESIGNNO, T.COLOR_name AS COLOR, SUM(ISNULL(BARCODESTOCK.PCS, 0)) AS PCS, SUM(ISNULL(BARCODESTOCK.MTRS, 0)) AS MTRS, T.ORDERPCS AS PENDINGPCS, T.ORDERMTRS AS PENDINGMTRS, (SUM(ISNULL(BARCODESTOCK.PCS, 0)) - T.ORDERPCS) AS BALPCS, (SUM(ISNULL(BARCODESTOCK.MTRS, 0)) - T.ORDERMTRS) AS BALMTRS, T.CMPID AS CMPID, T.YEARID AS YEARID, COALESCE(BARCODESTOCK.CATEGORY, T.CATEGORY) AS CATEGORY FROM (SELECT  ITEMMASTER.item_name, CATEGORYMASTER.category_name AS CATEGORY, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, SUM(ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0)) AS ORDERPCS, SUM(ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0)) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id  LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, CATEGORYMASTER.category_name, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS T LEFT OUTER JOIN BARCODESTOCK ON T.ITEM_ID = BARCODESTOCK.ITEMID AND T.DESIGN_ID = BARCODESTOCK.DESIGNID AND  T.COLOR_ID = BARCODESTOCK.COLORID AND T.YEARID = BARCODESTOCK.YEARID " & BARCODECLAUSE & "  GROUP BY T.item_name, T.DESIGN_NO, T.COLOR_name,T.CMPID, T.YEARID, T.ORDERPCS, T.ORDERMTRS, COALESCE(BARCODESTOCK.CATEGORY, T.CATEGORY)) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = DESIGN_NO AND J.COLOR = COLOR_NAME AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM  ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND ALLPROGRAMMASTER_DESC.PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID ) AS PROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = PRGDESIGN.DESIGN_NO AND J.COLOR = PRGCOLOR.COLOR_NAME AND J.YEARID = PROGRAMMASTER_DESC.PROGRAM_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID, J.CATEGORY")
            ElseIf FRMSTRING = "REORDER" Then
                DT = OBJCMN.search(" J.ITEMNAME, ISNULL(J.CATEGORY,'') AS CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, (SUM(J.MTRS)+SUM(ISNULL(PROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(PROGRAMMASTER_DESC.PRG_OUTMTRS, 0))-SUM(J.PENDINGMTRS)) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(PROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(PROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS , ISNULL(SUM(REORDER.REORDER_MTRS),0) AS REORDERMTRS, ISNULL(SUM(PENDINGPRG.BALMTRS),0) AS PENDINGPRG, ISNULL(SUM(PENDINGPO.POMTRS),0) AS PENDINGPO, 0.00 AS FINALBAL ", "", " (SELECT COALESCE(T.ITEMNAME, ASORDER.ITEMNAME) AS ITEMNAME, COALESCE(T.DESIGNNO,ASORDER.DESIGNNO) AS DESIGNNO, ISNULL(T.COLOR, ASORDER.COLOR) AS COLOR, ISNULL(T.PCS,0) AS PCS, ISNULL(T.MTRS,0) AS MTRS, ISNULL(ASORDER.ORDERPCS,0) AS PENDINGPCS, ISNULL(ASORDER.ORDERMTRS,0) AS PENDINGMTRS, (ISNULL(T.PCS,0) - ISNULL(ASORDER.ORDERPCS,0)) AS BALPCS, (ISNULL(T.MTRS,0) - ISNULL(ASORDER.ORDERMTRS,0)) AS BALMTRS, COALESCE(T.CMPID, ASORDER.CMPID) AS CMPID, COALESCE(T.YEARID,ASORDER.YEARID) AS YEARID, COALESCE(T.CATEGORY,ASORDER.CATEGORY) AS CATEGORY FROM (SELECT ITEMNAME, CATEGORY, DESIGNNO, COLOR, SUM(PCS) AS PCS, SUM(MTRS) AS MTRS, CMPID, YEARID, ITEMID, DESIGNID, COLORID FROM BARCODESTOCK WHERE BARCODESTOCK.YEARID = " & YearId & BARCODECLAUSE & " GROUP BY ITEMNAME, CATEGORY, DESIGNNO, COLOR, CMPID, YEARID, ITEMID, DESIGNID, COLORID) AS T FULL OUTER JOIN (SELECT  ISNULL(ITEMMASTER.item_name,'') AS ITEMNAME, CATEGORYMASTER.category_name AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO,0) AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SUM(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY),0) AS ORDERPCS, ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS), 0) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, CATEGORYMASTER.category_name, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS ASORDER ON T.ITEMID = ASORDER.item_id AND T.DESIGNID = ASORDER.DESIGN_ID  AND  T.COLORID = ASORDER.COLOR_ID AND T.YEARID = ASORDER.YEARID ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID  LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = DESIGN_NO AND J.COLOR = COLOR_NAME AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND ALLPROGRAMMASTER_DESC.PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID) AS PROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = PRGDESIGN.DESIGN_NO AND J.COLOR = PRGCOLOR.COLOR_NAME AND J.YEARID = PROGRAMMASTER_DESC.PROGRAM_YEARID LEFT OUTER JOIN (SELECT REORDER_ITEMID, REORDER_DESIGNID, REORDER_COLORID, REORDER_YEARID, SUM(REORDER_QTY) AS REORDER_MTRS FROM REORDERLEVEL WHERE REORDER_YEARID = " & YearId & " GROUP BY REORDER_ITEMID, REORDER_DESIGNID, REORDER_COLORID, REORDER_YEARID ) AS REORDER LEFT OUTER JOIN ITEMMASTER AS REORDITEM ON REORDER_ITEMID = REORDITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS REORDDESIGN ON REORDER_DESIGNID = REORDDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS REORDCOLOR ON REORDER_COLORID = REORDCOLOR.COLOR_ID  ON J.ITEMNAME = REORDITEM.ITEM_NAME AND J.DESIGNNO = REORDDESIGN.DESIGN_NO AND J.COLOR = REORDCOLOR.COLOR_NAME AND J.YEARID = REORDER.REORDER_YEARID LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS  FROM LOT_VIEW WHERE YEARID = " & YearId & " AND PROGRAMDONE = 'FALSE' AND LOTCOMPLETED = 'FALSE' GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS PENDINGPRG ON J.ITEMNAME = PENDINGPRG.ITEMNAME AND J.DESIGNNO = PENDINGPRG.DESIGN AND J.COLOR = PENDINGPRG.SHADE AND J.YEARID = PENDINGPRG.YEARID LEFT OUTER JOIN (SELECT  ALLPURCHASEORDER_DESC.PO_ITEMID, ALLPURCHASEORDER_DESC.PO_DESIGNID, ALLPURCHASEORDER_DESC.PO_COLORID, ALLPURCHASEORDER_DESC.PO_YEARID, SUM(ALLPURCHASEORDER_DESC.PO_MTRS) - SUM(ALLPURCHASEORDER_DESC.PO_RECDMTRS) AS POMTRS  FROM  ALLPURCHASEORDER_DESC INNER JOIN ALLPURCHASEORDER ON ALLPURCHASEORDER_DESC.PO_NO = ALLPURCHASEORDER.PO_NO AND ALLPURCHASEORDER_DESC.TYPE = ALLPURCHASEORDER.TYPE AND  ALLPURCHASEORDER_DESC.PO_YEARID = ALLPURCHASEORDER.PO_YEARID WHERE ALLPURCHASEORDER_DESC.PO_YEARID = " & YearId & " AND ROUND(ISNULL(ALLPURCHASEORDER_DESC.PO_MTRS - ALLPURCHASEORDER_DESC.PO_RECDMTRS, 0), 2) > 0 AND ALLPURCHASEORDER_DESC.PO_CLOSED = 'FALSE' GROUP BY ALLPURCHASEORDER_DESC.PO_ITEMID, ALLPURCHASEORDER_DESC.PO_DESIGNID, ALLPURCHASEORDER_DESC.PO_COLORID, ALLPURCHASEORDER_DESC.PO_YEARID ) AS PENDINGPO LEFT OUTER JOIN ITEMMASTER AS PENDINGPOITEM ON PENDINGPO.PO_ITEMID = PENDINGPOITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PENDINGPODESIGN ON PENDINGPO.PO_DESIGNID = PENDINGPODESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PENDINGPOCOLOR ON PENDINGPO.PO_COLORID = PENDINGPOCOLOR.COLOR_ID  ON J.ITEMNAME = PENDINGPOITEM.ITEM_NAME AND J.DESIGNNO = PENDINGPODESIGN.DESIGN_NO AND J.COLOR = PENDINGPOCOLOR.COLOR_NAME AND J.YEARID = PENDINGPO.PO_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, ISNULL(J.CATEGORY,''), J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID")
            Else
                DT = OBJCMN.search(" J.ITEMNAME, ISNULL(J.CATEGORY,'') AS CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(PROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(PROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS ", "", " (SELECT COALESCE(T.ITEMNAME, ASORDER.ITEMNAME) AS ITEMNAME, COALESCE(T.DESIGNNO,ASORDER.DESIGNNO) AS DESIGNNO, ISNULL(T.COLOR, ASORDER.COLOR) AS COLOR, ISNULL(T.PCS,0) AS PCS, ISNULL(T.MTRS,0) AS MTRS, ISNULL(ASORDER.ORDERPCS,0) AS PENDINGPCS, ISNULL(ASORDER.ORDERMTRS,0) AS PENDINGMTRS, (ISNULL(T.PCS,0) - ISNULL(ASORDER.ORDERPCS,0)) AS BALPCS, (ISNULL(T.MTRS,0) - ISNULL(ASORDER.ORDERMTRS,0)) AS BALMTRS, COALESCE(T.CMPID, ASORDER.CMPID) AS CMPID, COALESCE(T.YEARID,ASORDER.YEARID) AS YEARID, COALESCE(T.CATEGORY,ASORDER.CATEGORY) AS CATEGORY FROM (SELECT ITEMNAME, CATEGORY, DESIGNNO, COLOR, SUM(PCS) AS PCS, SUM(MTRS) AS MTRS, CMPID, YEARID, ITEMID, DESIGNID, COLORID FROM BARCODESTOCK WHERE BARCODESTOCK.YEARID = " & YearId & BARCODECLAUSE & " GROUP BY ITEMNAME, CATEGORY, DESIGNNO, COLOR, CMPID, YEARID, ITEMID, DESIGNID, COLORID) AS T FULL OUTER JOIN (SELECT  ISNULL(ITEMMASTER.item_name,'') AS ITEMNAME, CATEGORYMASTER.category_name AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO,0) AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SUM(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY),0) AS ORDERPCS, ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS), 0) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, CATEGORYMASTER.category_name, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS ASORDER ON T.ITEMID = ASORDER.item_id AND T.DESIGNID = ASORDER.DESIGN_ID  AND  T.COLORID = ASORDER.COLOR_ID AND T.YEARID = ASORDER.YEARID ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID  LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = DESIGN_NO AND J.COLOR = COLOR_NAME AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0  AND ALLPROGRAMMASTER_DESC.PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID) AS PROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = PRGDESIGN.DESIGN_NO AND J.COLOR = PRGCOLOR.COLOR_NAME AND J.YEARID = PROGRAMMASTER_DESC.PROGRAM_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, ISNULL(J.CATEGORY,''), J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID")
            End If
            GRIDBILLDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDBILL.FocusedRowHandle = GRIDBILL.RowCount - 1
                GRIDBILL.TopRowIndex = GRIDBILL.RowCount - 15
            End If
            TOTAL()
            If Val(TXTMTRS.Text.Trim) <> 0 Then GRIDBILL.Columns("BALMTRS").FilterInfo = New DevExpress.XtraGrid.Columns.ColumnFilterInfo("BALMTRS >= " & Val(TXTMTRS.Text.Trim))
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub TOTAL()
        For I As Integer = 0 To GRIDBILL.RowCount - 1
            Dim DTROW As DataRow = GRIDBILL.GetDataRow(I)
            If FRMSTRING = "REORDER" Then
                DTROW("BALMTRS") = (Val(DTROW("MTRS")) + Val(DTROW("PROGRAMMTRS"))) - Val(DTROW("PENDINGMTRS"))
                DTROW("FINALBAL") = (Val(DTROW("BALMTRS")) + Val(DTROW("PENDINGPRG")) + Val(DTROW("PENDINGPO"))) - Val(DTROW("REORDERMTRS"))
            Else
                DTROW("BALMTRS") = (Val(DTROW("MTRS"))) - Val(DTROW("PENDINGMTRS"))
            End If
        Next
    End Sub

    Private Sub GRIDBILLDETAILS_Click(sender As Object, e As EventArgs) Handles GRIDBILLDETAILS.Click
        Try
            GRIDSTOCKDETAILS.DataSource = Nothing
            GRIDORDERDETAILS.DataSource = Nothing
            GRIDPRGDETAILS.DataSource = Nothing
            GRIDGRNDETAILS.DataSource = Nothing
            GRIDPODETAILS.DataSource = Nothing

            If Val(GRIDBILL.GetFocusedRowCellValue("MTRS")) > 0 Then FILLSTOCKGRID()
            If Val(GRIDBILL.GetFocusedRowCellValue("PROGRAMMTRS")) > 0 Then FILLPRGGRID()
            If Val(GRIDBILL.GetFocusedRowCellValue("PENDINGMTRS")) > 0 Then FILLORDERGRID()

            If FRMSTRING = "REORDER" Then
                If Val(GRIDBILL.GetFocusedRowCellValue("PENDINGPRG")) > 0 Then FILLGRNGRID()
                If Val(GRIDBILL.GetFocusedRowCellValue("PENDINGPO")) > 0 Then FILLPOGRID()
            End If

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TOOLREFRESH_Click(sender As Object, e As EventArgs) Handles TOOLREFRESH.Click
        Try
            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLSTOCKGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As DataTable = OBJCMN.search("PIECETYPE, UNIT, SUM(PCS) AS PCS, ROUND(SUM(MTRS),2) AS MTRS ", "", " BARCODESTOCK ", WHERECLAUSE & BARCODECLAUSE & " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND COLOR = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND YEARID = " & YearId & " GROUP BY PIECETYPE, UNIT")
            GRIDSTOCKDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDSTOCK.FocusedRowHandle = GRIDSTOCK.RowCount - 1
                GRIDSTOCK.TopRowIndex = GRIDSTOCK.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLORDERGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim HAVINGCLAUSE As String = ""
            If SALEORDERONMTRS = True Then HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) > 0 " Else HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGPCS)+SUM(OLDPENDINGPCS),0) > 0"
            If ClientName <> "AVIS" Then SOCLAUSE = ""

            Dim DT As DataTable = OBJCMN.search("NAME, ORDERNO, DUEDATE, UNIT, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PCS, ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) AS MTRS ", "", " PENDINGSALEORDER ", " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND SHADE = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND YEARID = " & YearId & SOCLAUSE & " GROUP BY NAME, ORDERNO, DUEDATE, UNIT " & HAVINGCLAUSE)
            GRIDORDERDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDORDER.FocusedRowHandle = GRIDORDER.RowCount - 1
                GRIDORDER.TopRowIndex = GRIDORDER.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLPRGGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As DataTable = OBJCMN.search("LEDGERS.Acc_cmpname AS NAME, ALLPROGRAMMASTER.PROGRAM_NO AS PRGNO, ALLPROGRAMMASTER.PROGRAM_DATE AS DATE, ALLPROGRAMMASTER_DESC.PROGRAM_LOTNO AS LOTNO, ISNULL(SUM(ALLPROGRAMMASTER_DESC.PROGRAM_PCS),0) AS MTRS,  ISNULL(SUM(ALLPROGRAMMASTER_DESC.PROGRAM_PCS)-SUM(ALLPROGRAMMASTER_DESC.PROGRAM_RECDPCS),0) AS BALMTRS ", "", " ALLPROGRAMMASTER INNER JOIN ALLPROGRAMMASTER_DESC ON ALLPROGRAMMASTER.PROGRAM_NO = ALLPROGRAMMASTER_DESC.PROGRAM_NO AND ALLPROGRAMMASTER.PROGRAM_TYPE = ALLPROGRAMMASTER_DESC.PROGRAM_TYPE AND ALLPROGRAMMASTER.PROGRAM_YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID INNER JOIN LEDGERS ON ALLPROGRAMMASTER.PROGRAM_LEDGERID = LEDGERS.ACC_ID INNER JOIN ITEMMASTER ON ALLPROGRAMMASTER_DESC.PROGRAM_ITEMID = ITEMMASTER.ITEM_ID INNER JOIN DESIGNMASTER ON ALLPROGRAMMASTER_DESC.PROGRAM_DESIGNID = DESIGNMASTER.DESIGN_ID INNER JOIN COLORMASTER ON ALLPROGRAMMASTER_DESC.PROGRAM_COLORID = COLORMASTER.COLOR_ID ", " AND ITEMMASTER.ITEM_NAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNMASTER.DESIGN_NO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND COLORMASTER.COLOR_NAME = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND ALLPROGRAMMASTER_DESC.PROGRAM_STATUS <> 'CANCEL' AND ALLPROGRAMMASTER.PROGRAM_YEARID = " & YearId & " GROUP BY LEDGERS.Acc_cmpname, ALLPROGRAMMASTER.PROGRAM_NO, ALLPROGRAMMASTER.PROGRAM_DATE, ALLPROGRAMMASTER_DESC.PROGRAM_LOTNO")
            GRIDPRGDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDPRG.FocusedRowHandle = GRIDPRG.RowCount - 1
                GRIDPRG.TopRowIndex = GRIDPRG.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLGRNGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As DataTable = OBJCMN.search("JOBBERNAME AS NAME, LOTNO, DATE, GRNNO, ISNULL(SUM(ACCEPTEDMTRS),0) AS MTRS ", "", " LOT_VIEW ", " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGN = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND SHADE = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND PROGRAMDONE = 'FALSE' AND LOTCOMPLETED = 'FALSE' AND YEARID = " & YearId & " GROUP BY JOBBERNAME, LOTNO, DATE, GRNNO")
            GRIDGRNDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDGRN.FocusedRowHandle = GRIDGRN.RowCount - 1
                GRIDGRN.TopRowIndex = GRIDGRN.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLPOGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As DataTable = OBJCMN.search("LEDGERS.Acc_cmpname AS NAME, ALLPURCHASEORDER.PO_NO AS PONO, ALLPURCHASEORDER.PO_DATE AS DATE, ROUND(ISNULL(SUM(ALLPURCHASEORDER_DESC.PO_MTRS) - SUM(ALLPURCHASEORDER_DESC.PO_RECDMTRS), 0), 2) AS MTRS ", "", " ALLPURCHASEORDER_DESC INNER JOIN ALLPURCHASEORDER ON ALLPURCHASEORDER_DESC.PO_NO = ALLPURCHASEORDER.PO_NO AND ALLPURCHASEORDER_DESC.TYPE = ALLPURCHASEORDER.TYPE AND ALLPURCHASEORDER_DESC.PO_YEARID = ALLPURCHASEORDER.PO_YEARID INNER JOIN LEDGERS ON ALLPURCHASEORDER.PO_LEDGERID = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLPURCHASEORDER_DESC.PO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON ALLPURCHASEORDER_DESC.PO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLPURCHASEORDER_DESC.PO_DESIGNID = DESIGNMASTER.DESIGN_id ", " AND ITEMMASTER.ITEM_NAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNMASTER.DESIGN_NO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND COLORMASTER.COLOR_NAME = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND (ALLPURCHASEORDER_DESC.PO_YEARID = " & YearId & ") AND ALLPURCHASEORDER_DESC.PO_CLOSED = 'FALSE' AND (ROUND(ISNULL(ALLPURCHASEORDER_DESC.PO_MTRS - ALLPURCHASEORDER_DESC.PO_RECDMTRS, 0), 2) > 0) GROUP BY LEDGERS.Acc_cmpname , ALLPURCHASEORDER.PO_NO , ALLPURCHASEORDER.PO_DATE")
            GRIDPODETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDPO.FocusedRowHandle = GRIDPO.RowCount - 1
                GRIDPO.TopRowIndex = GRIDPO.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub GRIDSTOCKDETAILS_DoubleClick(sender As Object, e As EventArgs) Handles GRIDSTOCKDETAILS.DoubleClick
        Try
            If Val(GRIDSTOCK.GetFocusedRowCellValue("MTRS")) > 0 Then
                Dim OBJSTOCK As New GodownwiseDetails
                OBJSTOCK.TEMPITEMNAME = GRIDBILL.GetFocusedRowCellValue("ITEMNAME")
                OBJSTOCK.TEMPDESIGNNO = GRIDBILL.GetFocusedRowCellValue("DESIGNNO")
                OBJSTOCK.TEMPCOLOR = GRIDBILL.GetFocusedRowCellValue("COLOR")
                OBJSTOCK.MdiParent = MDIMain
                OBJSTOCK.Show()
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub CMDPRINT_Click(sender As Object, e As EventArgs) Handles CMDPRINT.Click
        Try
            If MsgBox("Wish to Print?", MsgBoxStyle.YesNo) = vbNo Then Exit Sub

            Dim OBJBS As New ClsStockGridReport
            OBJBS.DELETE(CmpId)

            'If GRIDBILL.FilterPanelText <> "" Then GRIDBILL.ActiveFilterEnabled = False

            For i As Integer = 0 To GRIDBILL.DataRowCount - 1
                Dim dtrow As DataRow = GRIDBILL.GetDataRow(i)

                OBJBS.alParaval.Add(dtrow("ITEMNAME"))
                OBJBS.alParaval.Add(dtrow("DESIGNNO"))
                OBJBS.alParaval.Add(dtrow("COLOR"))
                OBJBS.alParaval.Add(Val(dtrow("PCS")))
                OBJBS.alParaval.Add(Val(dtrow("MTRS")))
                OBJBS.alParaval.Add(Val(dtrow("PENDINGPCS")))
                OBJBS.alParaval.Add(Val(dtrow("PENDINGMTRS")))
                OBJBS.alParaval.Add(Val(dtrow("BALMTRS")))
                OBJBS.alParaval.Add(Val(dtrow("PACKINGMTRS")))
                OBJBS.alParaval.Add(Val(dtrow("DYEINGMTRS")))
                OBJBS.alParaval.Add(CmpId)
                OBJBS.alParaval.Add(YearId)

                Dim INTRESULT As Integer = OBJBS.SAVE()
                OBJBS.alParaval.Clear()

            Next

            If MsgBox("Wish to Print with Mtrs", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                Dim OBJSTOCK As New StockDesign
                OBJSTOCK.MdiParent = MDIMain
                OBJSTOCK.FRMSTRING = "ORDERVSSTOCKMTRS"
                OBJSTOCK.PERIOD = TXTMTRS.Text.Trim
                OBJSTOCK.Show()
            End If

            If MsgBox("Wish to Print Only Shades Report", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                Dim OBJSTOCK As New StockDesign
                OBJSTOCK.MdiParent = MDIMain
                OBJSTOCK.FRMSTRING = "ORDERVSSTOCKWITHOUTMTRS"
                OBJSTOCK.PERIOD = TXTMTRS.Text.Trim
                OBJSTOCK.Show()
            End If

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SaleOrderVsStockGridReport_Shown(sender As Object, e As EventArgs) Handles Me.Shown
        Try
            If FRMSTRING = "REORDER" Then
                GPENDINGGRN.Visible = True
                GPENDINGPO.Visible = True
                GREORDER.Visible = True
                GFINALBAL.Visible = True
                Me.Text = "Sale Order Vs Stock (Reorder)"
            Else
                GPRGMTRS.VisibleIndex = GBALMTRS.VisibleIndex + 1
            End If

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub GRIDBILL_RowStyle(sender As Object, e As RowStyleEventArgs) Handles GRIDBILL.RowStyle
        Try
            If e.RowHandle >= 0 And FRMSTRING = "REORDER" Then
                Dim View As GridView = sender
                If Val(View.GetRowCellDisplayText(e.RowHandle, View.Columns("BALMTRS"))) - Val(View.GetRowCellDisplayText(e.RowHandle, View.Columns("REORDERMTRS"))) < 0 Then e.Appearance.BackColor = Color.LightGreen
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TXTMTRS_KeyPress(sender As Object, e As KeyPressEventArgs) Handles TXTMTRS.KeyPress
        numdotkeypress(e, sender, Me)
    End Sub
End Class